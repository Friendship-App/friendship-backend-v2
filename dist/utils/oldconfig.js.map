{"version":3,"sources":["../../src/utils/oldconfig.js"],"names":["env","process","NODE_ENV","dotenv","config","silent","requiredEnvironmentVariables","forEach","key","console","log","Error","server","host","HOST","port","PORT","db","debug","client","connection","DATABASE_URL","user","password","database","ssl","pool","min","max","migrations","tableName","directory","auth","secret","SECRET","saltRounds","options","algorithms","expiresIn","development","seeds","production"],"mappings":";;;;;;;;AAAA;;;;;;AAEA,MAAMA,MAAMC,QAAQD,GAApB;;AAEA,IAAI,CAACA,IAAIE,QAAL,IAAiBF,IAAIE,QAAJ,KAAiB,aAAtC,EAAqD;AACnDC,mBAAOC,MAAP,CAAc,EAAEC,QAAQ,IAAV,EAAd;AACD;;AAED,MAAMC,+BAA+B,CAAC,cAAD,EAAiB,QAAjB,CAArC;;AAEA,IACEN,IAAIE,QAAJ,IACCF,IAAIE,QAAJ,KAAiB,aAAjB,IAAkCF,IAAIE,QAAJ,KAAiB,MAFtD,EAGE;AACAI,+BAA6BC,OAA7B,CAAqCC,OAAO;AAC1C,QAAI,CAACR,IAAIQ,GAAJ,CAAL,EAAe;AACb;AACAC,cAAQC,GAAR,CAAa,iCAAgCF,GAAI,WAAjD;AACA;;AAEA,YAAM,IAAIG,KAAJ,CAAU,WAAV,CAAN;AACD;AACF,GARD;AASD;;AAED,MAAMP,SAAS;AACbQ,UAAQ;AACNC,UAAMb,IAAIc,IAAJ,IAAY,SADZ;AAENC,UAAMf,IAAIgB,IAAJ,IAAY;AAFZ,GADK;AAKbC,MAAI;AACF;AACAC,WAAO,IAFL,EAEW;AACbC,YAAQ,IAHN;AAIFC,gBAAYpB,IAAIqB,YAAJ,IAAoB;AAC9BR,YAAM,WADwB;AAE9BS,YAAM,UAFwB;AAG9BC,gBAAU,EAHoB;AAI9BC,gBAAU,YAJoB;AAK9BC,WAAK;AALyB,KAJ9B;AAWFC,UAAM;AACJC,WAAK,CADD;AAEJC,WAAK;AAFD,KAXJ;AAeFC,gBAAY;AACVC,iBAAW,iBADD;AAEVC,iBAAW;AAFD;AAfV,GALS;AAyBbC,QAAM;AACJC,YAAQjC,IAAIkC,MAAJ,IAAc,mBADlB;AAEJC,gBAAY,EAFR;AAGJC,aAAS;AACPC,kBAAY,CAAC,OAAD,CADL;AAEPC,iBAAW;AAFJ;AAHL;AAzBO,CAAf;;+BAoCKlC,M;AACHa,MAAI;AACF;AACAsB,8BACKnC,OAAOa,EADZ;;AAGEuB,aAAO;AACLT,mBAAW;AADN;AAHT,MAFE;;AAUF;AACAU,6BACKrC,OAAOa,EADZ;;AAGEuB,aAAO;AACLT,mBAAW;AADN;AAHT;AAXE","file":"oldconfig.js","sourcesContent":["import dotenv from 'dotenv';\n\nconst env = process.env;\n\nif (!env.NODE_ENV || env.NODE_ENV === 'development') {\n  dotenv.config({ silent: true });\n}\n\nconst requiredEnvironmentVariables = ['DATABASE_URL', 'SECRET'];\n\nif (\n  env.NODE_ENV &&\n  (env.NODE_ENV !== 'development' && env.NODE_ENV !== 'test')\n) {\n  requiredEnvironmentVariables.forEach(key => {\n    if (!env[key]) {\n      /* eslint-disable no-console */\n      console.log(`Warning: Environment variable ${key} not set.`);\n      /* eslint-enable no-console */\n\n      throw new Error('Quitting.');\n    }\n  });\n}\n\nconst config = {\n  server: {\n    host: env.HOST || '0.0.0.0',\n    port: env.PORT || 3888,\n  },\n  db: {\n    // Common config for all db environments\n    debug: true, // Toggle db debugging\n    client: 'pg',\n    connection: env.DATABASE_URL || {\n      host: '127.0.0.1',\n      user: 'postgres',\n      password: '',\n      database: 'friendship',\n      ssl: false,\n    },\n    pool: {\n      min: 1,\n      max: 1,\n    },\n    migrations: {\n      tableName: 'knex_migrations',\n      directory: 'migrations',\n    },\n  },\n  auth: {\n    secret: env.SECRET || 'really_secret_key',\n    saltRounds: 10,\n    options: {\n      algorithms: ['HS256'],\n      expiresIn: '24h',\n    },\n  },\n};\n\nexport default {\n  ...config,\n  db: {\n    // Developer's local machine\n    development: {\n      ...config.db,\n\n      seeds: {\n        directory: 'seeds-dev',\n      },\n    },\n\n    // Production environment\n    production: {\n      ...config.db,\n\n      seeds: {\n        directory: 'seeds-prod',\n      },\n    },\n  },\n};\n"]}