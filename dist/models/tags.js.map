{"version":3,"sources":["../../src/models/tags.js"],"names":["getUserLove","getUserHate","dbGetTags","knex","select","from","dbGetActivities","where","userId","andWhere","raw","then","res","tagsarray","getTagsDetails","tags","whereIn","dbGetUserTags","idOfUserAskedFor","loveInCommon","hateInCommon","loveTags","hateTags","getTagInCommon","userTags","dbRegisterTags","insert","into","love","count","data"],"mappings":";;;;;;QAWgBA,W,GAAAA,W;QAUAC,W,GAAAA,W;;AArBhB;;;;AACA;;;;;;AAEO,MAAMC,gCAAY,MAAMC,eAAKC,MAAL,GAAcC,IAAd,CAAmB,MAAnB,CAAxB;;AAEA,MAAMC,4CAAkB,MAC7BH,eACGC,MADH,GAEGC,IAFH,CAEQ,MAFR,EAGGE,KAHH,CAGS,UAHT,EAGqB,CAHrB,CADK;;AAMA,SAASP,WAAT,CAAqBQ,MAArB,EAA6B;AAClC,SAAO,oBAAK,UAAL,EACJD,KADI,CACE,QADF,EACYC,MADZ,EAEJC,QAFI,CAEK,MAFL,EAEa,IAFb,EAGJL,MAHI,CAGGD,eAAKO,GAAL,CAAS,0CAAT,CAHH,EAIJC,IAJI,CAICC,OAAO;AACX,WAAOA,IAAI,CAAJ,EAAOC,SAAd;AACD,GANI,CAAP;AAOD;;AAEM,SAASZ,WAAT,CAAqBO,MAArB,EAA6B;AAClC,SAAO,oBAAK,UAAL,EACJD,KADI,CACE,QADF,EACYC,MADZ,EAEJC,QAFI,CAEK,MAFL,EAEa,KAFb,EAGJL,MAHI,CAGGD,eAAKO,GAAL,CAAS,0CAAT,CAHH,EAIJC,IAJI,CAICC,OAAO;AACX,WAAOA,IAAI,CAAJ,EAAOC,SAAd;AACD,GANI,CAAP;AAOD;;AAED,SAASC,cAAT,CAAwBC,OAAO,EAA/B,EAAmC;AACjC,SAAOZ,eACJC,MADI,GAEJC,IAFI,CAEC,MAFD,EAGJW,OAHI,CAGI,IAHJ,EAGUD,IAHV,CAAP;AAID;;AAEM,MAAME;AAAA,+BAAgB,WAAOC,gBAAP,EAAyBV,MAAzB,EAAoC;AAC/D,QAAIW,YAAJ,EAAkBC,YAAlB;AACA,QAAIC,WAAW,MAAMrB,YAAYkB,gBAAZ,CAArB;AACA,QAAII,WAAW,MAAMrB,YAAYiB,gBAAZ,CAArB;;AAEA,QAAIG,QAAJ,EAAc;AACZF,qBAAe,MAAMI,eAAeF,QAAf,EAAyBb,MAAzB,EAAiC,IAAjC,CAArB;AACAa,iBAAW,MAAMP,eAAeO,QAAf,CAAjB;AACD,KAHD,MAGO;AACLF,qBAAe,CAAf;AACAE,iBAAW,EAAX;AACD;;AAED,QAAIC,QAAJ,EAAc;AACZF,qBAAe,MAAMG,eAAeD,QAAf,EAAyBd,MAAzB,EAAiC,KAAjC,CAArB;AACAc,iBAAW,MAAMR,eAAeQ,QAAf,CAAjB;AACD,KAHD,MAGO;AACLF,qBAAe,CAAf;AACAE,iBAAW,EAAX;AACD;;AAED,UAAME,WAAW,mBACf,EADe,EAEf,EAAEH,QAAF,EAAYC,QAAZ,EAAsBH,YAAtB,EAAoCC,YAApC,EAFe,CAAjB;AAIA,WAAOI,QAAP;AACD,GA1BY;;AAAA;AAAA;AAAA;AAAA,IAAN;;AA4BA,MAAMC,0CAAiBD,YAC5BrB,eAAKuB,MAAL,CAAYF,QAAZ,EAAsBG,IAAtB,CAA2B,UAA3B,CADK;;AAGP,SAASJ,cAAT,CAAwBR,OAAO,EAA/B,EAAmCG,gBAAnC,EAAqDU,IAArD,EAA2D;AACzD,SAAOzB,eACJ0B,KADI,GAEJxB,IAFI,CAEC,UAFD,EAGJW,OAHI,CAGI,OAHJ,EAGaD,IAHb,EAIJN,QAJI,CAIK,QAJL,EAIeS,gBAJf,EAKJT,QALI,CAKK,MALL,EAKamB,IALb,EAMJjB,IANI,CAMCmB,QAAQA,KAAK,CAAL,EAAQD,KANjB,CAAP;AAOD","file":"tags.js","sourcesContent":["import knex from '../utils/knex';\nimport { merge } from 'lodash';\n\nexport const dbGetTags = () => knex.select().from('tags');\n\nexport const dbGetActivities = () =>\n  knex\n    .select()\n    .from('tags')\n    .where('category', 1);\n\nexport function getUserLove(userId) {\n  return knex('user_tag')\n    .where('userId', userId)\n    .andWhere('love', true)\n    .select(knex.raw('array_agg(DISTINCT \"tagId\") as tagsArray'))\n    .then(res => {\n      return res[0].tagsarray;\n    });\n}\n\nexport function getUserHate(userId) {\n  return knex('user_tag')\n    .where('userId', userId)\n    .andWhere('love', false)\n    .select(knex.raw('array_agg(DISTINCT \"tagId\") as tagsArray'))\n    .then(res => {\n      return res[0].tagsarray;\n    });\n}\n\nfunction getTagsDetails(tags = []) {\n  return knex\n    .select()\n    .from('tags')\n    .whereIn('id', tags);\n}\n\nexport const dbGetUserTags = async (idOfUserAskedFor, userId) => {\n  let loveInCommon, hateInCommon;\n  let loveTags = await getUserLove(idOfUserAskedFor);\n  let hateTags = await getUserHate(idOfUserAskedFor);\n\n  if (loveTags) {\n    loveInCommon = await getTagInCommon(loveTags, userId, true);\n    loveTags = await getTagsDetails(loveTags);\n  } else {\n    loveInCommon = 0;\n    loveTags = [];\n  }\n\n  if (hateTags) {\n    hateInCommon = await getTagInCommon(hateTags, userId, false);\n    hateTags = await getTagsDetails(hateTags);\n  } else {\n    hateInCommon = 0;\n    hateTags = [];\n  }\n\n  const userTags = merge(\n    {},\n    { loveTags, hateTags, loveInCommon, hateInCommon },\n  );\n  return userTags;\n};\n\nexport const dbRegisterTags = userTags =>\n  knex.insert(userTags).into('user_tag');\n\nfunction getTagInCommon(tags = [], idOfUserAskedFor, love) {\n  return knex\n    .count()\n    .from('user_tag')\n    .whereIn('tagId', tags)\n    .andWhere('userId', idOfUserAskedFor)\n    .andWhere('love', love)\n    .then(data => data[0].count);\n}\n"]}