{"version":3,"sources":["../../src/models/users.js"],"names":["userListFields","getUserLocations","userId","leftJoin","where","select","knex","raw","then","res","locationsarray","dbGetUsersBatch","pageNumber","pageLimit","offset","loveTags","hateTags","userLocations","usersAlreadyFetched","whereIn","andWhereNot","andWhere","limit","length","arr","from","as","groupBy","union","whereNotIn","orderByRaw","dbUserIsBanned","user","id","countDistinct","count","getLocationsName","locations","data","getUserGenders","idOfUserAskedFor","genderarray","getGendersName","genders","dbGetUserInformation","userDetails","dbRegisterNotificationToken","token","update","notificationToken"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA,MAAMA,iBAAiB,CACrB,UADqB,EAErB,iBAFqB,EAGrB,kBAHqB,EAIrB,aAJqB,EAKrB,aALqB,EAMrB,gBANqB,EAOrB,mBAPqB,EAQrB,cARqB,EASrB,qBATqB,EAUrB,cAVqB,EAWrB,iBAXqB,EAYrB,cAZqB,EAarB,aAbqB,CAAvB;;AAgBA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAChC,SAAO,oBAAK,eAAL,EACJC,QADI,CACK,WADL,EACkB,cADlB,EACkC,0BADlC,EAEJC,KAFI,CAEE,QAFF,EAEYF,MAFZ,EAGJG,MAHI,CAGGC,eAAKC,GAAL,CAAS,oDAAT,CAHH,EAIJC,IAJI,CAICC,OAAO;AACX,WAAOA,IAAI,CAAJ,EAAOC,cAAd;AACD,GANI,CAAP;AAOD;;AAEM,MAAMC;AAAA,+BAAkB,WAAOC,UAAP,EAAmBV,MAAnB,EAA8B;AAC3D,UAAMW,YAAY,EAAlB;AACA,UAAMC,SAASF,aAAaC,SAA5B;;AAEA,UAAME,WAAW,MAAM,uBAAYb,MAAZ,CAAvB;AACA,UAAMc,WAAW,MAAM,uBAAYd,MAAZ,CAAvB;;AAEA,UAAMe,gBAAgB,MAAMhB,iBAAiBC,MAAjB,CAA5B;;AAEA,UAAMgB,sBAAsB,MAAM,oBAAK,OAAL,EAC/Bb,MAD+B,CACxBC,eAAKC,GAAL,CAAS,qCAAT,CADwB,EAE/BJ,QAF+B,CAEtB,aAFsB,EAEP,oBAFO,EAEe,UAFf,EAG/BA,QAH+B,CAGtB,SAHsB,EAGX,YAHW,EAGG,sBAHH,EAI/BA,QAJ+B,CAItB,eAJsB,EAIL,sBAJK,EAImB,UAJnB,EAK/BA,QAL+B,CAKtB,WALsB,EAKT,cALS,EAKO,0BALP,EAM/BA,QAN+B,CAMtB,oBANsB,EAMA,eANA,EAMiB,UANjB,EAO/BA,QAP+B,CAOtB,oBAPsB,EAOA,eAPA,EAOiB,UAPjB,EAQ/BgB,OAR+B,CAQvB,0BARuB,EAQKF,aARL,EAS/BG,WAT+B,CASnB,UATmB,EASPlB,MATO,EAU/BmB,QAV+B,CAUtB,aAVsB,EAUP,MAVO,EAW/BA,QAX+B,CAY9Bf,eAAKC,GAAL,CAAU,sBAAqBQ,QAAS,4BAAxC,CAZ8B,EAc/BM,QAd+B,CAe9Bf,eAAKC,GAAL,CAAU,sBAAqBS,QAAS,6BAAxC,CAf8B,EAiB/BM,KAjB+B,CAiBzBR,MAjByB,EAkB/BN,IAlB+B,CAkB1B,eAAO;AACX,aAAOC,IAAIc,MAAJ,GAAa,CAAb,GAAiBd,IAAI,CAAJ,EAAOe,GAAxB,GAA8B,EAArC;AACD,KApB+B,CAAlC;;AAsBA,WAAOlB,eACJmB,IADI,CACC,YAAW;AACf,WAAKpB,MAAL,CAAY,CACV,GAAGL,cADO,EAEVM,eAAKC,GAAL,CAAS,yCAAT,CAFU,EAGVD,eAAKC,GAAL,CAAS,iDAAT,CAHU,EAIVD,eAAKC,GAAL,CAAS,8CAAT,CAJU,EAKVD,eAAKC,GAAL,CAAS,8CAAT,CALU,CAAZ,EAOGkB,IAPH,CAOQ,OAPR,EAQGtB,QARH,CAQY,aARZ,EAQ2B,oBAR3B,EAQiD,UARjD,EASGA,QATH,CASY,SATZ,EASuB,YATvB,EASqC,sBATrC,EAUGA,QAVH,CAUY,eAVZ,EAU6B,sBAV7B,EAUqD,UAVrD,EAWGA,QAXH,CAWY,WAXZ,EAWyB,cAXzB,EAWyC,0BAXzC,EAYGA,QAZH,CAYY,oBAZZ,EAYkC,eAZlC,EAYmD,UAZnD,EAaGA,QAbH,CAaY,oBAbZ,EAakC,eAblC,EAamD,UAbnD,EAcGgB,OAdH,CAcW,0BAdX,EAcuCF,aAdvC,EAeGG,WAfH,CAee,UAff,EAe2BlB,MAf3B,EAgBGmB,QAhBH,CAgBY,aAhBZ,EAgB2B,MAhB3B,EAiBGA,QAjBH,CAkBIf,eAAKC,GAAL,CAAU,sBAAqBQ,QAAS,4BAAxC,CAlBJ,EAoBGM,QApBH,CAqBIf,eAAKC,GAAL,CAAU,sBAAqBS,QAAS,6BAAxC,CArBJ,EAuBGU,EAvBH,CAuBM,MAvBN,EAwBGC,OAxBH,CAwBW,UAxBX;AAyBD,KA3BI,EA2BF,IA3BE,EA4BJC,KA5BI,CA4BE,YAAW;AAChB,WAAKvB,MAAL,CAAY,CACV,GAAGL,cADO,EAEVM,eAAKC,GAAL,CAAS,yCAAT,CAFU,EAGVD,eAAKC,GAAL,CAAS,iDAAT,CAHU,EAIVD,eAAKC,GAAL,CAAU,iBAAV,CAJU,EAKVD,eAAKC,GAAL,CAAU,kBAAV,CALU,CAAZ,EAOGkB,IAPH,CAOQ,OAPR,EAQGtB,QARH,CAQY,aARZ,EAQ2B,oBAR3B,EAQiD,UARjD,EASGA,QATH,CASY,SATZ,EASuB,YATvB,EASqC,sBATrC,EAUGA,QAVH,CAUY,eAVZ,EAU6B,sBAV7B,EAUqD,UAVrD,EAWGA,QAXH,CAWY,WAXZ,EAWyB,cAXzB,EAWyC,0BAXzC,EAYGA,QAZH,CAYY,oBAZZ,EAYkC,eAZlC,EAYmD,UAZnD,EAaGA,QAbH,CAaY,oBAbZ,EAakC,eAblC,EAamD,UAbnD,EAcGgB,OAdH,CAcW,0BAdX,EAcuCF,aAdvC,EAeGY,UAfH,CAec,UAfd,EAe0BX,mBAf1B,EAgBGE,WAhBH,CAgBe,UAhBf,EAgB2BlB,MAhB3B,EAiBGmB,QAjBH,CAiBY,aAjBZ,EAiB2B,MAjB3B,EAkBGM,OAlBH,CAkBW,UAlBX;AAmBD,KAhDI,EAgDF,IAhDE,EAiDJD,EAjDI,CAiDD,QAjDC,EAkDJJ,KAlDI,CAkDET,SAlDF,EAmDJC,MAnDI,CAmDGA,MAnDH,EAoDJgB,UApDI,CAoDO,kCApDP,CAAP;AAqDD,GApFY;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAsFA,MAAMC,0CAAiBC,QAAQ;AACpC,SAAO,oBAAK,cAAL,EACJ5B,KADI,CACE,EAAEF,QAAQ8B,KAAKC,EAAf,EADF,EAEJC,aAFI,CAEU,QAFV,EAGJ1B,IAHI,CAGCC,OAAOA,IAAI,CAAJ,EAAO0B,KAAP,GAAe,CAHvB,CAAP;AAID,CALM;;AAOP,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACnC,SAAO/B,eACJD,MADI,CACGC,eAAKC,GAAL,CAAS,iDAAT,CADH,EAEJkB,IAFI,CAEC,WAFD,EAGJN,OAHI,CAGI,IAHJ,EAGUkB,SAHV,EAIJ7B,IAJI,CAIC8B,QAAQA,KAAK,CAAL,EAAQD,SAJjB,CAAP;AAKD;;AAED,SAASE,cAAT,CAAwBC,gBAAxB,EAA0C;AACxC,SAAOlC,eACJD,MADI,CACGC,eAAKC,GAAL,CAAS,+CAAT,CADH,EAEJkB,IAFI,CAEC,aAFD,EAGJrB,KAHI,CAGE,QAHF,EAGYoC,gBAHZ,EAIJhC,IAJI,CAIC8B,QAAQA,KAAK,CAAL,EAAQG,WAJjB,CAAP;AAKD;;AAED,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,SAAOrC,eACJD,MADI,CACGC,eAAKC,GAAL,CAAS,sDAAT,CADH,EAEJkB,IAFI,CAEC,SAFD,EAGJN,OAHI,CAGI,IAHJ,EAGUwB,OAHV,EAIJnC,IAJI,CAIC8B,QAAQA,KAAK,CAAL,EAAQK,OAJjB,CAAP;AAKD;;AAEM,MAAMC;AAAA,gCAAuB,WAAMJ,gBAAN,EAA0B;AAC5D,QAAIH,YAAY,MAAMpC,iBAAiBuC,gBAAjB,CAAtB;AACA,QAAIG,UAAU,MAAMJ,eAAeC,gBAAf,CAApB;;AAEAH,gBAAY,MAAMD,iBAAiBC,SAAjB,CAAlB;AACAM,cAAU,MAAMD,eAAeC,OAAf,CAAhB;;AAEA,UAAML,OAAO,MAAMhC,eAChBD,MADgB,CACTL,cADS,EAEhByB,IAFgB,CAEX,OAFW,EAGhBrB,KAHgB,CAGV,IAHU,EAGJoC,gBAHI,CAAnB;AAIA,QAAIK,cAAcP,KAAK,CAAL,CAAlB;AACAO,kBAAc,mBAAMA,WAAN,EAAmB,EAAER,SAAF,EAAnB,EAAkC,EAAEM,OAAF,EAAlC,CAAd;;AAEA,WAAOE,WAAP;AACD,GAfY;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAiBA,MAAMC,oEAA8B,CAAC5C,MAAD,EAAS6C,KAAT,KAAmB;AAC5D,SAAO,oBAAK,OAAL,EACJC,MADI,CACG,EAAEC,mBAAmBF,KAArB,EADH,EAEJ3C,KAFI,CAEE,EAAE6B,IAAI/B,MAAN,EAFF,EAGJM,IAHI,EAAP;AAID,CALM","file":"users.js","sourcesContent":["import knex from '../utils/knex';\nimport { merge } from 'lodash';\nimport { getUserHate, getUserLove } from './tags';\n\nconst userListFields = [\n  'users.id',\n  'users.createdAt',\n  'users.lastActive',\n  'users.email',\n  'users.scope',\n  'users.username',\n  'users.description',\n  'users.avatar',\n  'users.compatibility',\n  'users.active',\n  'users.birthyear',\n  'users.status',\n  'users.image',\n];\n\nfunction getUserLocations(userId) {\n  return knex('user_location')\n    .leftJoin('locations', 'locations.id', 'user_location.locationId')\n    .where('userId', userId)\n    .select(knex.raw('array_agg(DISTINCT locations.id) as locationsArray'))\n    .then(res => {\n      return res[0].locationsarray;\n    });\n}\n\nexport const dbGetUsersBatch = async (pageNumber, userId) => {\n  const pageLimit = 10;\n  const offset = pageNumber * pageLimit;\n\n  const loveTags = await getUserLove(userId);\n  const hateTags = await getUserHate(userId);\n\n  const userLocations = await getUserLocations(userId);\n\n  const usersAlreadyFetched = await knex('users')\n    .select(knex.raw('array_agg(DISTINCT users.id) as arr'))\n    .leftJoin('user_gender', 'user_gender.userId', 'users.id')\n    .leftJoin('genders', 'genders.id', 'user_gender.genderId')\n    .leftJoin('user_location', 'user_location.userId', 'users.id')\n    .leftJoin('locations', 'locations.id', 'user_location.locationId')\n    .leftJoin('user_tag as utlove', 'utlove.userId', 'users.id')\n    .leftJoin('user_tag as uthate', 'uthate.userId', 'users.id')\n    .whereIn('user_location.locationId', userLocations)\n    .andWhereNot('users.id', userId)\n    .andWhere('users.scope', 'user')\n    .andWhere(\n      knex.raw(`utlove.\"tagId\" IN (${loveTags}) AND utlove.\"love\" = true`),\n    )\n    .andWhere(\n      knex.raw(`uthate.\"tagId\" IN (${hateTags}) AND uthate.\"love\" = false`),\n    )\n    .limit(offset)\n    .then(res => {\n      return res.length > 0 ? res[0].arr : [];\n    });\n\n  return knex\n    .from(function() {\n      this.select([\n        ...userListFields,\n        knex.raw('array_agg(DISTINCT \"gender\") AS genders'),\n        knex.raw('array_agg(DISTINCT locations.name) AS locations'),\n        knex.raw('count(DISTINCT utlove.\"tagId\") AS loveCommon'),\n        knex.raw('count(DISTINCT uthate.\"tagId\") AS hateCommon'),\n      ])\n        .from('users')\n        .leftJoin('user_gender', 'user_gender.userId', 'users.id')\n        .leftJoin('genders', 'genders.id', 'user_gender.genderId')\n        .leftJoin('user_location', 'user_location.userId', 'users.id')\n        .leftJoin('locations', 'locations.id', 'user_location.locationId')\n        .leftJoin('user_tag as utlove', 'utlove.userId', 'users.id')\n        .leftJoin('user_tag as uthate', 'uthate.userId', 'users.id')\n        .whereIn('user_location.locationId', userLocations)\n        .andWhereNot('users.id', userId)\n        .andWhere('users.scope', 'user')\n        .andWhere(\n          knex.raw(`utlove.\"tagId\" IN (${loveTags}) AND utlove.\"love\" = true`),\n        )\n        .andWhere(\n          knex.raw(`uthate.\"tagId\" IN (${hateTags}) AND uthate.\"love\" = false`),\n        )\n        .as('test')\n        .groupBy('users.id');\n    }, true)\n    .union(function() {\n      this.select([\n        ...userListFields,\n        knex.raw('array_agg(DISTINCT \"gender\") AS genders'),\n        knex.raw('array_agg(DISTINCT locations.name) AS locations'),\n        knex.raw(`0 AS loveCommon`),\n        knex.raw(`0 AS hateCommon `),\n      ])\n        .from('users')\n        .leftJoin('user_gender', 'user_gender.userId', 'users.id')\n        .leftJoin('genders', 'genders.id', 'user_gender.genderId')\n        .leftJoin('user_location', 'user_location.userId', 'users.id')\n        .leftJoin('locations', 'locations.id', 'user_location.locationId')\n        .leftJoin('user_tag as utlove', 'utlove.userId', 'users.id')\n        .leftJoin('user_tag as uthate', 'uthate.userId', 'users.id')\n        .whereIn('user_location.locationId', userLocations)\n        .whereNotIn('users.id', usersAlreadyFetched)\n        .andWhereNot('users.id', userId)\n        .andWhere('users.scope', 'user')\n        .groupBy('users.id');\n    }, true)\n    .as('test_2')\n    .limit(pageLimit)\n    .offset(offset)\n    .orderByRaw('loveCommon DESC, hateCommon DESC');\n};\n\nexport const dbUserIsBanned = user => {\n  return knex('banned_users')\n    .where({ userId: user.id })\n    .countDistinct('userId')\n    .then(res => res[0].count > 0);\n};\n\nfunction getLocationsName(locations) {\n  return knex\n    .select(knex.raw('array_agg(DISTINCT locations.name) AS locations'))\n    .from('locations')\n    .whereIn('id', locations)\n    .then(data => data[0].locations);\n}\n\nfunction getUserGenders(idOfUserAskedFor) {\n  return knex\n    .select(knex.raw('array_agg(DISTINCT \"genderId\") as genderArray'))\n    .from('user_gender')\n    .where('userId', idOfUserAskedFor)\n    .then(data => data[0].genderarray);\n}\n\nfunction getGendersName(genders) {\n  return knex\n    .select(knex.raw('array_agg(DISTINCT LOWER(genders.gender)) AS genders'))\n    .from('genders')\n    .whereIn('id', genders)\n    .then(data => data[0].genders);\n}\n\nexport const dbGetUserInformation = async idOfUserAskedFor => {\n  let locations = await getUserLocations(idOfUserAskedFor);\n  let genders = await getUserGenders(idOfUserAskedFor);\n\n  locations = await getLocationsName(locations);\n  genders = await getGendersName(genders);\n\n  const data = await knex\n    .select(userListFields)\n    .from('users')\n    .where('id', idOfUserAskedFor);\n  let userDetails = data[0];\n  userDetails = merge(userDetails, { locations }, { genders });\n\n  return userDetails;\n};\n\nexport const dbRegisterNotificationToken = (userId, token) => {\n  return knex('users')\n    .update({ notificationToken: token })\n    .where({ id: userId })\n    .then();\n};\n"]}