{"version":3,"sources":["../src/server.js"],"names":["process","env","TZ","startServer","server","Glue","compose","hapiManifest","hapiOptions","auth","strategy","key","validate","decoded","request","invalidToken","id","email","scope","isValid","response","Error","verifyOptions","algorithms","expiresIn","events","on","console","log","route","path","io","SocketIO","listen","listener","socket","message","broadcast","emit","routes","start","info","uri","err","error","exit"],"mappings":";;AAEA;;;;AACA;;;;AACA;;AACA;;;;;;;;AAEA;AACAA,QAAQC,GAAR,CAAYC,EAAZ,GAAiB,KAAjB;;AAEA,MAAMC;AAAA,+BAAc,aAAiB;AACnC,QAAI;AACF,YAAMC,SAAS,MAAMC,eAAKC,OAAL,CACnBC,kBADmB,EAEnBC,iBAFmB,CAArB;;AAKAJ,aAAOK,IAAP,CAAYC,QAAZ,CAAqB,KAArB,EAA4B,KAA5B,EAAmC;AACjCC,aAAK,mBAD4B;AAEjCC,kBAAU,UAACC,OAAD,EAAUC,OAAV,EAAsB;AAC9B,gBAAMC,eAAe,CAACF,QAAQG,EAAT,IAAe,CAACH,QAAQI,KAAxB,IAAiC,CAACJ,QAAQK,KAA/D;;AAEA,cAAIH,YAAJ,EAAkB;AAChB,mBAAO;AACLI,uBAAS,KADJ;AAELC,wBAAU,IAAIC,KAAJ,CACR,wEADQ;AAFL,aAAP;AAMD,WAPD,MAOO;AACL,mBAAO,EAAEF,SAAS,IAAX,EAAP;AACD;AACF,SAfgC;AAgBjCG,uBAAe,EAAEC,YAAY,CAAC,OAAD,CAAd,EAAyBC,WAAW,KAApC;AAhBkB,OAAnC;;AAmBApB,aAAOqB,MAAP,CAAcC,EAAd,CAAiB,OAAjB,EAA0B,iBAAS;AACjCC,gBAAQC,GAAR,CAAa,oBAAmBC,MAAMC,IAAK,EAA3C;AACD,OAFD;;AAIA,YAAMC,KAAKC,iBAASC,MAAT,CAAgB7B,OAAO8B,QAAvB,CAAX;AACAH,SAAGL,EAAH,CAAM,SAAN,EAAiB,UAASS,MAAT,EAAiB;AAChCR,gBAAQC,GAAR,CAAY,yBAAZ,EAAuCO,OAAOnB,EAA9C;AACAmB,eAAOT,EAAP,CAAU,SAAV,EAAqBU,WAAW;AAC9BD,iBAAOE,SAAP,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiCF,OAAjC;AACD,SAFD;AAGD,OALD;;AAOA,YAAMhC,OAAOyB,KAAP,CAAaU,gBAAb,CAAN;AACA,YAAMnC,OAAOoC,KAAP,EAAN;AACAb,cAAQC,GAAR,CAAa,sBAAqBxB,OAAOqC,IAAP,CAAYC,GAAI,EAAlD;AACD,KAxCD,CAwCE,OAAOC,GAAP,EAAY;AACZhB,cAAQiB,KAAR,CAAcD,GAAd;AACA3C,cAAQ6C,IAAR,CAAa,CAAb;AACD;AACF,GA7CK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AA+CA1C","file":"server.js","sourcesContent":["\n\nimport Glue from 'glue';\nimport routes from './routes';\nimport { hapiManifest, hapiOptions } from './utils/config/hapi';\nimport SocketIO from 'socket.io';\n\n// Always use UTC timezone\nprocess.env.TZ = 'UTC';\n\nconst startServer = async function() {\n  try {\n    const server = await Glue.compose(\n      hapiManifest,\n      hapiOptions,\n    );\n\n    server.auth.strategy('jwt', 'jwt', {\n      key: 'really_secret_key',\n      validate: (decoded, request) => {\n        const invalidToken = !decoded.id || !decoded.email || !decoded.scope;\n\n        if (invalidToken) {\n          return {\n            isValid: false,\n            response: new Error(\n              'JWT is missing some fields and not valid! Please log out and in again.',\n            ),\n          };\n        } else {\n          return { isValid: true };\n        }\n      },\n      verifyOptions: { algorithms: ['HS256'], expiresIn: '24h' },\n    });\n\n    server.events.on('route', route => {\n      console.log(`New route added: ${route.path}`);\n    });\n\n    const io = SocketIO.listen(server.listener);\n    io.on('connect', function(socket) {\n      console.log('A client just joined on', socket.id);\n      socket.on('message', message => {\n        socket.broadcast.emit('message', message);\n      });\n    });\n\n    await server.route(routes);\n    await server.start();\n    console.log(`Server running at: ${server.info.uri}`);\n  } catch (err) {\n    console.error(err);\n    process.exit(1);\n  }\n};\n\nstartServer();\n"]}