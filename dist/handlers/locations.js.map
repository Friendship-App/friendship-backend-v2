{"version":3,"sources":["../../src/handlers/locations.js"],"names":["getLocations","request","reply","then","data","response","registerLocations","userId","locations","userLocations","map","location","push","locationId"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,sCAAe,CAACC,OAAD,EAAUC,KAAV,KAC1B,iCAAiBC,IAAjB,CAAsBC,QAAQF,MAAMG,QAAN,CAAeD,IAAf,CAA9B,CADK;;AAGA,MAAME,gDAAoB,CAACC,MAAD,EAASC,SAAT,KAAuB;AACtD,QAAMC,gBAAgB,EAAtB;AACAD,YAAUE,GAAV,CAAcC,YACZF,cAAcG,IAAd,CAAmB,EAAEL,MAAF,EAAUM,YAAYF,QAAtB,EAAnB,CADF;AAGA,SAAO,oCAAoBF,aAApB,CAAP;AACD,CANM","file":"locations.js","sourcesContent":["import { dbGetLocations, dbRegisterLocations } from '../models/locations';\n\nexport const getLocations = (request, reply) =>\n  dbGetLocations().then(data => reply.response(data));\n\nexport const registerLocations = (userId, locations) => {\n  const userLocations = [];\n  locations.map(location =>\n    userLocations.push({ userId, locationId: location }),\n  );\n  return dbRegisterLocations(userLocations);\n};\n"]}